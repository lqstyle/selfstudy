package com.example.demo1.study.concurrent.chapter09;

/*

类加载
加载->链接->初始化
  链接（验证，准备（为静态变量分配内存，并初始默认值，常量设置最终值），解析（符号引用转化为直接引用））
  初始化 为静态变量赋予最终值
类的主动初始化的场景
1.直接new
2 调用类的静态变量
3. 调用类的静态方法
4. 反射（获取class对象的三种方式：1.Class.forName, 2.实例.class 3.实例.getClass()  ）
5. 初始化子类会导致父类的初始化,子类访问父类的静态方法或者静态变量 会导致父类的初始化，但是子类不会初始化
6. main方法所在的类，即启动类会初始化
其他场景都是被动初始化
类的被动初始化 不会导致类的加载和初始化
 1. 创建类的数组不会导致初始化，只是分配一块连续的地址空间
 2. 直接访问类的常量不会初始化 （特殊场景 如果调用new Random 则会进行初始化，因为在加载和链接阶段不会对其赋值）
 */
public class InitClaz {

}
